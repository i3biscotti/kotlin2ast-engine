// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: request.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializetranspileRequest")
public inline fun transpileRequest(block: protocol.TranspileRequestKt.Dsl.() -> kotlin.Unit): protocol.Request.TranspileRequest =
  protocol.TranspileRequestKt.Dsl._create(protocol.Request.TranspileRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol.TranspileRequest`
 */
public object TranspileRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Request.TranspileRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Request.TranspileRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Request.TranspileRequest = _builder.build()

    /**
     * `.protocol.ProgramFile program = 1;`
     */
    public var program: protocol.Base.ProgramFile
      @JvmName("getProgram")
      get() = _builder.getProgram()
      @JvmName("setProgram")
      set(value) {
        _builder.setProgram(value)
      }
    /**
     * `.protocol.ProgramFile program = 1;`
     */
    public fun clearProgram() {
      _builder.clearProgram()
    }
    /**
     * `.protocol.ProgramFile program = 1;`
     * @return Whether the program field is set.
     */
    public fun hasProgram(): kotlin.Boolean {
      return _builder.hasProgram()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Request.TranspileRequest.copy(block: `protocol`.TranspileRequestKt.Dsl.() -> kotlin.Unit): protocol.Request.TranspileRequest =
  `protocol`.TranspileRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Request.TranspileRequestOrBuilder.programOrNull: protocol.Base.ProgramFile?
  get() = if (hasProgram()) getProgram() else null


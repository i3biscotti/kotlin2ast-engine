// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: expressions.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializeobjectPropertyReferenceExpression")
public inline fun objectPropertyReferenceExpression(block: protocol.ObjectPropertyReferenceExpressionKt.Dsl.() -> kotlin.Unit): protocol.Expressions.ObjectPropertyReferenceExpression =
  protocol.ObjectPropertyReferenceExpressionKt.Dsl._create(protocol.Expressions.ObjectPropertyReferenceExpression.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol.ObjectPropertyReferenceExpression`
 */
public object ObjectPropertyReferenceExpressionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Expressions.ObjectPropertyReferenceExpression.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Expressions.ObjectPropertyReferenceExpression.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Expressions.ObjectPropertyReferenceExpression = _builder.build()

    /**
     * `string objectName = 1;`
     */
    public var objectName: kotlin.String
      @JvmName("getObjectName")
      get() = _builder.getObjectName()
      @JvmName("setObjectName")
      set(value) {
        _builder.setObjectName(value)
      }
    /**
     * `string objectName = 1;`
     */
    public fun clearObjectName() {
      _builder.clearObjectName()
    }

    /**
     * `string propertyName = 2;`
     */
    public var propertyName: kotlin.String
      @JvmName("getPropertyName")
      get() = _builder.getPropertyName()
      @JvmName("setPropertyName")
      set(value) {
        _builder.setPropertyName(value)
      }
    /**
     * `string propertyName = 2;`
     */
    public fun clearPropertyName() {
      _builder.clearPropertyName()
    }

    /**
     * `.protocol.Position position = 3;`
     */
    public var position: protocol.PositionOuterClass.Position
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * `.protocol.Position position = 3;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * `.protocol.Position position = 3;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Expressions.ObjectPropertyReferenceExpression.copy(block: `protocol`.ObjectPropertyReferenceExpressionKt.Dsl.() -> kotlin.Unit): protocol.Expressions.ObjectPropertyReferenceExpression =
  `protocol`.ObjectPropertyReferenceExpressionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Expressions.ObjectPropertyReferenceExpressionOrBuilder.positionOrNull: protocol.PositionOuterClass.Position?
  get() = if (hasPosition()) getPosition() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: base.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializeastObject")
public inline fun astObject(block: protocol.AstObjectKt.Dsl.() -> kotlin.Unit): protocol.Base.AstObject =
  protocol.AstObjectKt.Dsl._create(protocol.Base.AstObject.newBuilder()).apply { block() }._build()
/**
 * ```
 * Base message for AST object, using the "oneof" feature to represent the sealed class behavior
 * ```
 *
 * Protobuf type `protocol.AstObject`
 */
public object AstObjectKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Base.AstObject.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Base.AstObject.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Base.AstObject = _builder.build()

    /**
     * `.protocol.Position position = 1;`
     */
    public var position: protocol.PositionOuterClass.Position
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * `.protocol.Position position = 1;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * `.protocol.Position position = 1;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }

    /**
     * `.protocol.Point point = 2;`
     */
    public var point: protocol.PositionOuterClass.Point
      @JvmName("getPoint")
      get() = _builder.getPoint()
      @JvmName("setPoint")
      set(value) {
        _builder.setPoint(value)
      }
    /**
     * `.protocol.Point point = 2;`
     */
    public fun clearPoint() {
      _builder.clearPoint()
    }
    /**
     * `.protocol.Point point = 2;`
     * @return Whether the point field is set.
     */
    public fun hasPoint(): kotlin.Boolean {
      return _builder.hasPoint()
    }

    /**
     * `.protocol.Node node = 3;`
     */
    public var node: protocol.Base.Node
      @JvmName("getNode")
      get() = _builder.getNode()
      @JvmName("setNode")
      set(value) {
        _builder.setNode(value)
      }
    /**
     * `.protocol.Node node = 3;`
     */
    public fun clearNode() {
      _builder.clearNode()
    }
    /**
     * `.protocol.Node node = 3;`
     * @return Whether the node field is set.
     */
    public fun hasNode(): kotlin.Boolean {
      return _builder.hasNode()
    }
    public val typeCase: protocol.Base.AstObject.TypeCase
      @JvmName("getTypeCase")
      get() = _builder.getTypeCase()

    public fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Base.AstObject.copy(block: `protocol`.AstObjectKt.Dsl.() -> kotlin.Unit): protocol.Base.AstObject =
  `protocol`.AstObjectKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Base.AstObjectOrBuilder.positionOrNull: protocol.PositionOuterClass.Position?
  get() = if (hasPosition()) getPosition() else null

public val protocol.Base.AstObjectOrBuilder.pointOrNull: protocol.PositionOuterClass.Point?
  get() = if (hasPoint()) getPoint() else null

public val protocol.Base.AstObjectOrBuilder.nodeOrNull: protocol.Base.Node?
  get() = if (hasNode()) getNode() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: statements.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializeobjectPropertyAssignmentStatement")
public inline fun objectPropertyAssignmentStatement(block: protocol.ObjectPropertyAssignmentStatementKt.Dsl.() -> kotlin.Unit): protocol.Statements.ObjectPropertyAssignmentStatement =
  protocol.ObjectPropertyAssignmentStatementKt.Dsl._create(protocol.Statements.ObjectPropertyAssignmentStatement.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol.ObjectPropertyAssignmentStatement`
 */
public object ObjectPropertyAssignmentStatementKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Statements.ObjectPropertyAssignmentStatement.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Statements.ObjectPropertyAssignmentStatement.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Statements.ObjectPropertyAssignmentStatement = _builder.build()

    /**
     * `string objectName = 1;`
     */
    public var objectName: kotlin.String
      @JvmName("getObjectName")
      get() = _builder.getObjectName()
      @JvmName("setObjectName")
      set(value) {
        _builder.setObjectName(value)
      }
    /**
     * `string objectName = 1;`
     */
    public fun clearObjectName() {
      _builder.clearObjectName()
    }

    /**
     * `string propertyName = 2;`
     */
    public var propertyName: kotlin.String
      @JvmName("getPropertyName")
      get() = _builder.getPropertyName()
      @JvmName("setPropertyName")
      set(value) {
        _builder.setPropertyName(value)
      }
    /**
     * `string propertyName = 2;`
     */
    public fun clearPropertyName() {
      _builder.clearPropertyName()
    }

    /**
     * `.protocol.Expression value = 3;`
     */
    public var value: protocol.Expressions.Expression
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * `.protocol.Expression value = 3;`
     */
    public fun clearValue() {
      _builder.clearValue()
    }
    /**
     * `.protocol.Expression value = 3;`
     * @return Whether the value field is set.
     */
    public fun hasValue(): kotlin.Boolean {
      return _builder.hasValue()
    }

    /**
     * `.protocol.Position position = 4;`
     */
    public var position: protocol.PositionOuterClass.Position
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * `.protocol.Position position = 4;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * `.protocol.Position position = 4;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Statements.ObjectPropertyAssignmentStatement.copy(block: `protocol`.ObjectPropertyAssignmentStatementKt.Dsl.() -> kotlin.Unit): protocol.Statements.ObjectPropertyAssignmentStatement =
  `protocol`.ObjectPropertyAssignmentStatementKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Statements.ObjectPropertyAssignmentStatementOrBuilder.valueOrNull: protocol.Expressions.Expression?
  get() = if (hasValue()) getValue() else null

public val protocol.Statements.ObjectPropertyAssignmentStatementOrBuilder.positionOrNull: protocol.PositionOuterClass.Position?
  get() = if (hasPosition()) getPosition() else null


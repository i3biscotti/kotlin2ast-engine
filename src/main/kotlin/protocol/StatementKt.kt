// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: statements.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializestatement")
public inline fun statement(block: protocol.StatementKt.Dsl.() -> kotlin.Unit): protocol.Statements.Statement =
  protocol.StatementKt.Dsl._create(protocol.Statements.Statement.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol.Statement`
 */
public object StatementKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Statements.Statement.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Statements.Statement.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Statements.Statement = _builder.build()

    /**
     * `.protocol.AssignmentStatement assignmentStatement = 1;`
     */
    public var assignmentStatement: protocol.Statements.AssignmentStatement
      @JvmName("getAssignmentStatement")
      get() = _builder.getAssignmentStatement()
      @JvmName("setAssignmentStatement")
      set(value) {
        _builder.setAssignmentStatement(value)
      }
    /**
     * `.protocol.AssignmentStatement assignmentStatement = 1;`
     */
    public fun clearAssignmentStatement() {
      _builder.clearAssignmentStatement()
    }
    /**
     * `.protocol.AssignmentStatement assignmentStatement = 1;`
     * @return Whether the assignmentStatement field is set.
     */
    public fun hasAssignmentStatement(): kotlin.Boolean {
      return _builder.hasAssignmentStatement()
    }

    /**
     * `.protocol.ClassDefinitionStatement classDefinitionStatement = 2;`
     */
    public var classDefinitionStatement: protocol.Statements.ClassDefinitionStatement
      @JvmName("getClassDefinitionStatement")
      get() = _builder.getClassDefinitionStatement()
      @JvmName("setClassDefinitionStatement")
      set(value) {
        _builder.setClassDefinitionStatement(value)
      }
    /**
     * `.protocol.ClassDefinitionStatement classDefinitionStatement = 2;`
     */
    public fun clearClassDefinitionStatement() {
      _builder.clearClassDefinitionStatement()
    }
    /**
     * `.protocol.ClassDefinitionStatement classDefinitionStatement = 2;`
     * @return Whether the classDefinitionStatement field is set.
     */
    public fun hasClassDefinitionStatement(): kotlin.Boolean {
      return _builder.hasClassDefinitionStatement()
    }

    /**
     * `.protocol.ExpressionDefinitionStatement expressionDefinitionStatement = 3;`
     */
    public var expressionDefinitionStatement: protocol.Statements.ExpressionDefinitionStatement
      @JvmName("getExpressionDefinitionStatement")
      get() = _builder.getExpressionDefinitionStatement()
      @JvmName("setExpressionDefinitionStatement")
      set(value) {
        _builder.setExpressionDefinitionStatement(value)
      }
    /**
     * `.protocol.ExpressionDefinitionStatement expressionDefinitionStatement = 3;`
     */
    public fun clearExpressionDefinitionStatement() {
      _builder.clearExpressionDefinitionStatement()
    }
    /**
     * `.protocol.ExpressionDefinitionStatement expressionDefinitionStatement = 3;`
     * @return Whether the expressionDefinitionStatement field is set.
     */
    public fun hasExpressionDefinitionStatement(): kotlin.Boolean {
      return _builder.hasExpressionDefinitionStatement()
    }

    /**
     * `.protocol.IfDefinitionStatement ifDefinitionStatement = 4;`
     */
    public var ifDefinitionStatement: protocol.Statements.IfDefinitionStatement
      @JvmName("getIfDefinitionStatement")
      get() = _builder.getIfDefinitionStatement()
      @JvmName("setIfDefinitionStatement")
      set(value) {
        _builder.setIfDefinitionStatement(value)
      }
    /**
     * `.protocol.IfDefinitionStatement ifDefinitionStatement = 4;`
     */
    public fun clearIfDefinitionStatement() {
      _builder.clearIfDefinitionStatement()
    }
    /**
     * `.protocol.IfDefinitionStatement ifDefinitionStatement = 4;`
     * @return Whether the ifDefinitionStatement field is set.
     */
    public fun hasIfDefinitionStatement(): kotlin.Boolean {
      return _builder.hasIfDefinitionStatement()
    }

    /**
     * `.protocol.ObjectPropertyAssignmentStatement objectPropertyAssignmentStatement = 5;`
     */
    public var objectPropertyAssignmentStatement: protocol.Statements.ObjectPropertyAssignmentStatement
      @JvmName("getObjectPropertyAssignmentStatement")
      get() = _builder.getObjectPropertyAssignmentStatement()
      @JvmName("setObjectPropertyAssignmentStatement")
      set(value) {
        _builder.setObjectPropertyAssignmentStatement(value)
      }
    /**
     * `.protocol.ObjectPropertyAssignmentStatement objectPropertyAssignmentStatement = 5;`
     */
    public fun clearObjectPropertyAssignmentStatement() {
      _builder.clearObjectPropertyAssignmentStatement()
    }
    /**
     * `.protocol.ObjectPropertyAssignmentStatement objectPropertyAssignmentStatement = 5;`
     * @return Whether the objectPropertyAssignmentStatement field is set.
     */
    public fun hasObjectPropertyAssignmentStatement(): kotlin.Boolean {
      return _builder.hasObjectPropertyAssignmentStatement()
    }

    /**
     * `.protocol.ReturnStatement returnStatement = 6;`
     */
    public var returnStatement: protocol.Statements.ReturnStatement
      @JvmName("getReturnStatement")
      get() = _builder.getReturnStatement()
      @JvmName("setReturnStatement")
      set(value) {
        _builder.setReturnStatement(value)
      }
    /**
     * `.protocol.ReturnStatement returnStatement = 6;`
     */
    public fun clearReturnStatement() {
      _builder.clearReturnStatement()
    }
    /**
     * `.protocol.ReturnStatement returnStatement = 6;`
     * @return Whether the returnStatement field is set.
     */
    public fun hasReturnStatement(): kotlin.Boolean {
      return _builder.hasReturnStatement()
    }

    /**
     * `.protocol.VariableDeclarationStatement varDeclarationStatement = 7;`
     */
    public var varDeclarationStatement: protocol.Statements.VariableDeclarationStatement
      @JvmName("getVarDeclarationStatement")
      get() = _builder.getVarDeclarationStatement()
      @JvmName("setVarDeclarationStatement")
      set(value) {
        _builder.setVarDeclarationStatement(value)
      }
    /**
     * `.protocol.VariableDeclarationStatement varDeclarationStatement = 7;`
     */
    public fun clearVarDeclarationStatement() {
      _builder.clearVarDeclarationStatement()
    }
    /**
     * `.protocol.VariableDeclarationStatement varDeclarationStatement = 7;`
     * @return Whether the varDeclarationStatement field is set.
     */
    public fun hasVarDeclarationStatement(): kotlin.Boolean {
      return _builder.hasVarDeclarationStatement()
    }

    /**
     * `.protocol.WhileDefinitionStatement whileDefinitionStatement = 8;`
     */
    public var whileDefinitionStatement: protocol.Statements.WhileDefinitionStatement
      @JvmName("getWhileDefinitionStatement")
      get() = _builder.getWhileDefinitionStatement()
      @JvmName("setWhileDefinitionStatement")
      set(value) {
        _builder.setWhileDefinitionStatement(value)
      }
    /**
     * `.protocol.WhileDefinitionStatement whileDefinitionStatement = 8;`
     */
    public fun clearWhileDefinitionStatement() {
      _builder.clearWhileDefinitionStatement()
    }
    /**
     * `.protocol.WhileDefinitionStatement whileDefinitionStatement = 8;`
     * @return Whether the whileDefinitionStatement field is set.
     */
    public fun hasWhileDefinitionStatement(): kotlin.Boolean {
      return _builder.hasWhileDefinitionStatement()
    }

    /**
     * `.protocol.ForDefinitionStatement forDefinitionStatement = 9;`
     */
    public var forDefinitionStatement: protocol.Statements.ForDefinitionStatement
      @JvmName("getForDefinitionStatement")
      get() = _builder.getForDefinitionStatement()
      @JvmName("setForDefinitionStatement")
      set(value) {
        _builder.setForDefinitionStatement(value)
      }
    /**
     * `.protocol.ForDefinitionStatement forDefinitionStatement = 9;`
     */
    public fun clearForDefinitionStatement() {
      _builder.clearForDefinitionStatement()
    }
    /**
     * `.protocol.ForDefinitionStatement forDefinitionStatement = 9;`
     * @return Whether the forDefinitionStatement field is set.
     */
    public fun hasForDefinitionStatement(): kotlin.Boolean {
      return _builder.hasForDefinitionStatement()
    }

    /**
     * `.protocol.FunctionDefinitionStatement functionDefinitionStatement = 10;`
     */
    public var functionDefinitionStatement: protocol.Statements.FunctionDefinitionStatement
      @JvmName("getFunctionDefinitionStatement")
      get() = _builder.getFunctionDefinitionStatement()
      @JvmName("setFunctionDefinitionStatement")
      set(value) {
        _builder.setFunctionDefinitionStatement(value)
      }
    /**
     * `.protocol.FunctionDefinitionStatement functionDefinitionStatement = 10;`
     */
    public fun clearFunctionDefinitionStatement() {
      _builder.clearFunctionDefinitionStatement()
    }
    /**
     * `.protocol.FunctionDefinitionStatement functionDefinitionStatement = 10;`
     * @return Whether the functionDefinitionStatement field is set.
     */
    public fun hasFunctionDefinitionStatement(): kotlin.Boolean {
      return _builder.hasFunctionDefinitionStatement()
    }
    public val stmtCase: protocol.Statements.Statement.StmtCase
      @JvmName("getStmtCase")
      get() = _builder.getStmtCase()

    public fun clearStmt() {
      _builder.clearStmt()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Statements.Statement.copy(block: `protocol`.StatementKt.Dsl.() -> kotlin.Unit): protocol.Statements.Statement =
  `protocol`.StatementKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Statements.StatementOrBuilder.assignmentStatementOrNull: protocol.Statements.AssignmentStatement?
  get() = if (hasAssignmentStatement()) getAssignmentStatement() else null

public val protocol.Statements.StatementOrBuilder.classDefinitionStatementOrNull: protocol.Statements.ClassDefinitionStatement?
  get() = if (hasClassDefinitionStatement()) getClassDefinitionStatement() else null

public val protocol.Statements.StatementOrBuilder.expressionDefinitionStatementOrNull: protocol.Statements.ExpressionDefinitionStatement?
  get() = if (hasExpressionDefinitionStatement()) getExpressionDefinitionStatement() else null

public val protocol.Statements.StatementOrBuilder.ifDefinitionStatementOrNull: protocol.Statements.IfDefinitionStatement?
  get() = if (hasIfDefinitionStatement()) getIfDefinitionStatement() else null

public val protocol.Statements.StatementOrBuilder.objectPropertyAssignmentStatementOrNull: protocol.Statements.ObjectPropertyAssignmentStatement?
  get() = if (hasObjectPropertyAssignmentStatement()) getObjectPropertyAssignmentStatement() else null

public val protocol.Statements.StatementOrBuilder.returnStatementOrNull: protocol.Statements.ReturnStatement?
  get() = if (hasReturnStatement()) getReturnStatement() else null

public val protocol.Statements.StatementOrBuilder.varDeclarationStatementOrNull: protocol.Statements.VariableDeclarationStatement?
  get() = if (hasVarDeclarationStatement()) getVarDeclarationStatement() else null

public val protocol.Statements.StatementOrBuilder.whileDefinitionStatementOrNull: protocol.Statements.WhileDefinitionStatement?
  get() = if (hasWhileDefinitionStatement()) getWhileDefinitionStatement() else null

public val protocol.Statements.StatementOrBuilder.forDefinitionStatementOrNull: protocol.Statements.ForDefinitionStatement?
  get() = if (hasForDefinitionStatement()) getForDefinitionStatement() else null

public val protocol.Statements.StatementOrBuilder.functionDefinitionStatementOrNull: protocol.Statements.FunctionDefinitionStatement?
  get() = if (hasFunctionDefinitionStatement()) getFunctionDefinitionStatement() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: request.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package protocol;

@kotlin.jvm.JvmName("-initializegenerateCodeRequest")
public inline fun generateCodeRequest(block: protocol.GenerateCodeRequestKt.Dsl.() -> kotlin.Unit): protocol.Request.GenerateCodeRequest =
  protocol.GenerateCodeRequestKt.Dsl._create(protocol.Request.GenerateCodeRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protocol.GenerateCodeRequest`
 */
public object GenerateCodeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protocol.Request.GenerateCodeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protocol.Request.GenerateCodeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protocol.Request.GenerateCodeRequest = _builder.build()

    /**
     * `.protocol.ProgramFile ast = 1;`
     */
    public var ast: protocol.Base.ProgramFile
      @JvmName("getAst")
      get() = _builder.getAst()
      @JvmName("setAst")
      set(value) {
        _builder.setAst(value)
      }
    /**
     * `.protocol.ProgramFile ast = 1;`
     */
    public fun clearAst() {
      _builder.clearAst()
    }
    /**
     * `.protocol.ProgramFile ast = 1;`
     * @return Whether the ast field is set.
     */
    public fun hasAst(): kotlin.Boolean {
      return _builder.hasAst()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun protocol.Request.GenerateCodeRequest.copy(block: `protocol`.GenerateCodeRequestKt.Dsl.() -> kotlin.Unit): protocol.Request.GenerateCodeRequest =
  `protocol`.GenerateCodeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val protocol.Request.GenerateCodeRequestOrBuilder.astOrNull: protocol.Base.ProgramFile?
  get() = if (hasAst()) getAst() else null


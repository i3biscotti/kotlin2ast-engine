buildscript {
    ext.kotlin_version = kotlin_version

    repositories {
        mavenCentral()
        maven {
            name 'JFrog OSS snapshot repo'
            url 'https://oss.jfrog.org/oss-snapshot-local/'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.ktor.plugin:plugin:2.3.7"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'
apply plugin: 'io.ktor.plugin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

group = 'org.i3biscotti'
version = '1.0-SNAPSHOT'

application {
    mainClassName = 'MainKt'
}

kotlin {
    jvmToolchain(11)
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.13.1"
    implementation "org.antlr:antlr4-runtime:4.13.1"
    implementation "io.ktor:ktor-server-core:2.3.7"
    implementation "io.ktor:ktor-server-netty:2.3.7"
    implementation "org.slf4j:slf4j-simple:2.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
}

tasks {
    generateGrammarSource {
        arguments += ['-visitor']
    }
}

compileKotlin {
    dependsOn("generateGrammarSource")
}

compileTestKotlin {
    dependsOn("generateGrammarSource")
}

// show results when running gradlew test
test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

